# Define configuration file parameters
[parameters]
# Data folder path
path = ./data/20201118/

# Proportion of test set
test_proportion = 0.3

# The column of X, starting from 0
x_col = [2,3,4,5,6,7,8,9,10,11]

# Add 1 to the column of Y, starting from 0
y_col = 1
#--------------------------------------------Normalized----------------------------------------------------------------------
# Whether to normalize (True/False), if it is True, only normalize, the program does not continue to run
normalized = False

# File path to be normalized
to_normalized_path = ./data/20201118/to_normalized_0.csv

# Normalized file output path
normalized_out_path = ./data/20201118/to_predict_0.csv

# Data stretching multiple during normalization
stretch = 10

# Maximum value in each column
max_array = 2,0.12,0.43,0.06,0.32,1.03,1.03,0.02,0.17,1175

# Minimum value in each column
min_array = 1.67,0.002,0.01,0,0.09,0.54,0.62,0,0.007,0.0010
#-----------------------------------------------------------------------------------------------------------------------
# Parameter grid
# Used in parameter test
;param_grid = {'kernel':('rbf','poly','linear','sigmoid'),'C':np.linspace(1, 1000, 10),'gamma':np.logspace(-5, 0, 10)}

# Used during model training
param_grid = {'C':np.linspace(1,500,2),'gamma':np.logspace(-5,0,2)}

# k-fold cross validation
n_splits = 5

# Used to output grayscale image, n_C is the number of C in the parameter grid, n_gamma is the number of gamma in the parameter grid
n_C = 2
n_gamma = 2

# Sample equalization
w_balanced = True

# Positive and negative sample weight, invalid if w_balanced is true
w_positive = 1
w_negative = 10
#-----------------------------------------------------------------------------------------------------------------------
# True value of positive and negative samples
positive = 1
negative = -100
#------------------------------------------------------------Data distribution histogram-----------------------------------------------------------
# Do you need a histogram of data distribution
if_hist = False
#-----------------------------------------------------------------------------------------------------------------------
#np.linspace（start, stop, num=50, endpoint=True, retstep=False, dtype=None）#Arithmetic sequence specifies evenly spaced numbers in length
#np.logspace(-2,2,10) constructs a geometric sequence from the -2 power of 10 to the second power of 10, and the length of the geometric sequence is 10 elements.np.logspace(-2,2,10,base=2)
